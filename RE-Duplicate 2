/*mpp.count(nums[i]) checks whether the current element (nums[i]) has already been encountered (i.e., whether it's stored as a key in the map).
computes the distance between the current index i and the last seen index of the same element.
If this distance is less than or equal to k, the condition is satisfied, and we return true.
If the condition is not satisfied, update the map with the current index of the element nums[i].mpp[nums[i]] = i;*/


class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        unordered_map<int,int> mpp;
        for(int i=0;i<nums.size();i++)
        {
            if(mpp.count(nums[i])){  
                if(abs(mpp[nums[i]]-i)<=k) 
                     return true;
            }
            mpp[nums[i]]=i;
        }
        return false;
    }
};
